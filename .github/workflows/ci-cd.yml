name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  AZURE_WEBAPP_NAME: seima-server
  JAVA_VERSION: '21'
  DISTRIBUTION: 'temurin'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Unit Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.DISTRIBUTION }}
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run Unit Tests
      run: |
        echo "🧪 Running unit tests..."
        ./mvnw clean test -Dspring.profiles.active=test
        
    - name: Generate Test Report
      run: |
        echo "📊 Generating test reports..."
        ./mvnw surefire-report:report-only
        
    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Unit Test Results
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: true
        
    - name: Upload Test Coverage Reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-coverage-reports
        path: |
          target/surefire-reports/
          target/site/
        retention-days: 30
        
    - name: Test Summary
      if: always()
      run: |
        echo "📋 Test Execution Summary:"
        if [ -f target/surefire-reports/TEST-*.xml ]; then
          echo "✅ Unit tests completed"
          test_count=$(grep -o 'tests="[0-9]*"' target/surefire-reports/TEST-*.xml | grep -o '[0-9]*' | head -1)
          failures=$(grep -o 'failures="[0-9]*"' target/surefire-reports/TEST-*.xml | grep -o '[0-9]*' | head -1)
          errors=$(grep -o 'errors="[0-9]*"' target/surefire-reports/TEST-*.xml | grep -o '[0-9]*' | head -1)
          echo "📊 Total tests: ${test_count:-0}"
          echo "❌ Failures: ${failures:-0}"
          echo "💥 Errors: ${errors:-0}"
        else
          echo "❌ No test results found"
        fi

  validate-dev:
    runs-on: ubuntu-latest
    needs: test
    name: Validate Dev Branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.DISTRIBUTION }}
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build and Validate
      run: |
        echo "🔨 Building and validating dev branch..."
        ./mvnw clean package -Dspring.profiles.active=test -DskipTests
      
    - name: Check build artifacts
      run: |
        echo "✅ Dev branch validation completed!"
        echo "📦 Build artifacts:"
        ls -lh ./target/*.jar
        echo "🎯 Ready for team review and merge to main"

  deploy-production:
    runs-on: ubuntu-latest
    needs: test
    name: Deploy to Production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.DISTRIBUTION }}
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build for Production
      run: |
        echo "🔨 Building application for production..."
        ./mvnw clean package -Dspring.profiles.active=prod -DskipTests
      
    - name: List production artifacts
      run: |
        echo "📦 Production build artifacts:"
        ls -lh ./target/*.jar
      
    - name: Deploy to Azure Production
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: './target/seima-server-0.0.1-SNAPSHOT.jar'
        
    - name: Notify production deployment
      run: |
        echo "🚀 Production deployment completed!"
        echo "📦 Application deployed successfully"
        echo "🔗 Live URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
        echo "✅ Available for end users"

  build-only:
    runs-on: ubuntu-latest
    needs: test
    name: Build Validation (PR)
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.DISTRIBUTION }}
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build for PR Validation
      run: |
        echo "🔨 Validating PR build..."
        ./mvnw clean package -Dspring.profiles.active=test -DskipTests
        
    - name: PR Validation Summary
      run: |
        echo "✅ PR validation completed successfully"
        echo "📋 Target branch: ${{ github.base_ref }}"
        echo "📦 Build artifacts:"
        ls -lh ./target/*.jar
        echo "🎯 Ready for team review"
