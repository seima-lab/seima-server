# Production Configuration for SEIMA Server
# Based on application-dev.yaml structure

app:
  lab-name: Seima Lab
  name: seima-server-dev
  port: 8082
  contact-mail: syhaoc2dh@gmail.com
  contact-name: Jason Nguyen
  client:
    baseUrl: ${BASE_URL_PROD}
  swagger:
    contact-name: Jason Nguyen
    contact-mail: syhaoc2dh@gmail.com
    contact-url: https://syhaoc2dh.com
    app-description: "Documentation for the Spring Boot Project"
    app-version: 3.4.0
    app-license-url: https://www.apache.org/licenses/LICENSE-2.0.html
    app-license: Apache 2.0
  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: ${DB_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
  oauth2:
    redirect-uri: seimaapp://auth/success
  email:
    otp-register:
      html-template: "user-otp-verify"
      subject: "Seima - Account Verification"
    password-reset:
      html-template: "password-reset-otp"
      subject: "Seima - Password Reset"
    group-invitation:
      html-template: "group-invitation"
      subject: "Seima - Group Invitation"
    group-acceptance:
      html-template: "group-acceptance"
      subject: "Seima - Welcome to Group"
    group-rejection:
      html-template: "group-rejection"
      subject: "Seima - Group Request Update"
    group-role-update:
      html-template: "group-role-update"
      subject: "Seima - Role Update"
    group-role-update-notification:
      html-template: "group-role-update-notification"
      subject: "Seima - Group Member Role Update"
    group-join-request-notification:
      html-template: "group-join-request-notification"
      subject: "Seima - New Join Request"
    group-member-removed:
      html-template: "group-member-removed"
      subject: "Seima - You have been removed from group"
    group-member-removed-notification:
      html-template: "group-member-removed-notification"
      subject: "Seima - Member Removed Notification"
    sender:
      from-address: seima.app.vn@gmail.com
      sender-name: Seima Lab


# Server configuration
server:
  port: ${app.port}
  servlet:
    session:
      cookie:
        secure: true

# Spring configuration
spring:
  application:
    name: ${app.name}
  datasource:
    url: ${app.datasource.url}
    username: ${app.datasource.username}
    password: ${app.datasource.password}
    driver-class-name: ${app.datasource.driver-class-name}
  jpa:
    database: mysql
    show-sql: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${YOUR_GOOGLE_CLIENT_ID}
            client-secret: ${YOUR_GOOGLE_CLIENT_SECRET}
            scope: openid,profile,email
  jackson:
    property-naming-strategy: SNAKE_CASE
  mail:
    host: smtp.sendgrid.net
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    from: seima.app.vn@gmail.com
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
# OTP configuration
otp:
  expiration-time: 300

# Redis configuration
redis:
  host: ${REDIS_HOST}
  port: ${REDIS_PORT}
  username: ${REDIS_USERNAME}
  password: ${REDIS_PASSWORD}

#JWT configuration
jwt:
  secret: aVeryLongAndRandomStringForHS512IsNeededHerePleaseMakeItSecure1234567890!@#$%^&*()_+
  access:
    token:
      expiration: 3600 # in seconds
  refresh:
    token:
      expiration: 604800 # in seconds (7 days)
#cloudinary configuration
cloudinary:
  cloud_name: ${CLOUDINARY_CLOUD_NAME}
  api_key: ${CLOUDINARY_API_KEY}
  api_secret: ${CLOUDINARY_API_SECRET}
# Swagger configuration
swagger:
  contact-name: ${app.contact-name}
  contact-mail: ${app.contact-mail}
  contact-url: ${app.contact-url}
  app-name: ${app.name}
  app-description: ${app.swagger.app-description}
  app-version: ${app.swagger.app-version}
  app-license-url: ${app.swagger.app-license-url}
  app-license: ${app.swagger.app-license}

azure:
  form:
    endpoint: ${AZURE_FORM_END_POINT}
    api-key: ${AZURE_FORM_API_KEY}

gemini:
  api-key: ${GEMINI_API_KEY}

# Branch.io configuration  
branch:
  branch-key: ${BRANCH_IO_API_KEY}
  branch-secret: ${BRANCH_IO_SECRET}
  domain: ${BRANCH_IO_DOMAIN}
# Firebase Config
firebase:
  credential-url: seima-datn-firebase-adminsdk-fbsvc-4514a05939.json
  project-id: seima-datn
# Google Cloud Speech credentials
google:
  cloud:
    credentials:
      location: manifest-sum-466914-k5-9ef54eb71147.json
